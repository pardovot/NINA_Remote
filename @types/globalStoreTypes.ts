type TelescopeSettings = Partial<{
  Id: string;
  Name: string;
  FocalLength: string;
  FocalRatio: string;
  SnapPortStart: string;
  SnapPortStop: string;
  SettleTime: number;
  NoSync: boolean;
  PrimaryReversed: boolean;
  SecondaryReversed: boolean;
}>;

type CameraSettings = Partial<{
  Id: string;
  PixelSize: number;
  BayerPattern: number;
  BulbMode: number;
  SerialPort: string;
  BitDepth: number;
  RawConverter: number;
  MinFlatExposureTime: number;
  MaxFlatExposureTime: number;
  FileCameraFolder: string;
  FileCameraExtension: string;
  FileCameraUseBulbMode: boolean;
  FileCameraIsBayered: boolean;
  FLIEnableFloodFlush: boolean;
  FLIFloodDuration: number;
  FLIFlushCount: number;
  FLIFloodBin: any;
  FLIEnableSnapshotFloodFlush: boolean;
  BitScaling: boolean;
  CoolingDuration: number;
  WarmingDuration: number;
  Temperature: any;
  BinningX: any;
  BinningY: any;
  Gain: any;
  Offset: any;
  USBLimit: any;
  ReadoutMode: any;
  ReadoutModeForSnapImages: any;
  ReadoutModeForNormalImages: any;
  QhyIncludeOverscan: boolean;
  Timeout: number;
  DewHeaterOn: boolean;
  ASCOMAllowUnevenPixelDimension: boolean;
  MirrorLockupDelay: number;
  AtikGainPreset: number;
  AtikExposureSpeed: number;
  AtikWindowHeaterPowerLevel: number;
  BinAverageEnabled: boolean;
  TrackingCameraASCOMServerEnabled: boolean;
  TrackingCameraASCOMServerPipeName: string;
  FileCameraAlwaysListen: boolean;
  FileCameraDownloadDelay: number;
  SBIGUseExternalCcdTracker: boolean;
  TrackingCameraASCOMServerLoggingEnabled: boolean;
  GenericCameraDewHeaterStrength: number;
  GenericCameraFanSpeed: number;
  TouptekAlikeHighGain: boolean;
  TouptekAlikeUltraMode: boolean;
  TouptekAlikeHighFullwell: boolean;
  TouptekAlikeDewHeaterStrength: number;
}>;

type FilterWheelSettings = Partial<{
  Id: string;
  DisableGuidingOnFilterChange: boolean;
  Unidirectional: boolean;
  FilterWheelFilters: any[];
}>;

type FocuserSettings = Partial<{
  Id: string;
  UseFilterWheelOffsets: boolean;
  AutoFocusStepSize: number;
  AutoFocusInitialOffsetSteps: number;
  AutoFocusExposureTime: number;
  AutoFocusMethod: number;
  ContrastDetectionMethod: number;
  AutoFocusDisableGuiding: boolean;
  FocuserSettleTime: number;
  AutoFocusTotalNumberOfAttempts: number;
  AutoFocusNumberOfFramesPerPoint: number;
  AutoFocusInnerCropRatio: number;
  AutoFocusOuterCropRatio: number;
  BacklashIn: number;
  BacklashOut: number;
  AutoFocusBinning: number;
  AutoFocusUseBrightestStars: number;
  AutoFocusCurveFitting: number;
  BacklashCompensationModel: number;
  AutoFocusTimeoutSeconds: number;
  RSquaredThreshold: number;
}>;

type RotatorSettings = Partial<{
  Id: string;
  Reverse: boolean;
  Reverse2: boolean;
  RangeType: number;
  Range: number;
  MechanicalZero: number;
  StepSize: number;
  CanReverse: boolean;
  CanSyncMechanicalZero: boolean;
  CanSyncHome: boolean;
  CanSyncMechanicalZeroToHome: boolean;
  CanSyncHomeToMechanicalZero: boolean;
  CanSyncCurrentToMechanicalZero: boolean;
  CanSyncMechanicalZeroToCurrent: boolean;
  CanSyncCurrentToHome: boolean;
  CanSyncHomeToCurrent: boolean;
  CanSyncPosition: boolean;
  CanSyncTargetPosition: boolean;
  CanUseExternalSyncSignal: boolean;
  CanSyncSynchronizedPosition: boolean;
  CanSyncMechanicalZeroToSynchronizedPosition: boolean;
  CanSyncSynchronizedPositionToMechanicalZero: boolean;
  CanSyncSynchronizedPositionToHome: boolean;
  CanSyncHomeToSynchronizedPosition: boolean;
  CanSyncSynchronizedPositionToCurrent: boolean;
  CanSyncCurrentToSynchronizedPosition: boolean;
}>;
